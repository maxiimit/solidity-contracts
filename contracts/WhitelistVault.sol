// SPDX-License-Identifier: MIT
pragma solidity 0.8.30;

contract WhitelistVault {
  mapping(address => bool) public whitelist;
  mapping(address => uint) public balances;
  address public owner;

  constructor() {
    owner = msg.sender;
  }

  modifier onlyOwner() {
    require(owner == msg.sender, "U are not owner!");
    _;
  }

  function deposit() public payable {
    require(whitelist[msg.sender], "Address has not access");
    balances[msg.sender] += msg.value;
  }

  function addToWhitelist(address user) public onlyOwner {
    whitelist[user] = true;
  }
}

// ‚úÖ –ó–∞–¥–∞—á–∞ 3: Whitelist-–¥–æ—Å—Ç—É–ø –∫ –¥–µ–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—é (WhitelistVault)

// üîπ –£—Å–ª–æ–≤–∏–µ:
// 	‚Ä¢	–ö–æ–Ω—Ç—Ä–∞–∫—Ç –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å —ç—Ñ–∏—Ä —Ç–æ–ª—å–∫–æ –æ—Ç –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤ (whitelist).
// 	‚Ä¢	–ê–¥—Ä–µ—Å –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω —Ç–æ–ª—å–∫–æ owner.
// 	‚Ä¢	–ï—Å–ª–∏ –Ω–µ –≤ whitelist ‚Äî deposit() –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç require.

// üìå –ü–æ–¥—Å–∫–∞–∑–∫–∏:
// 	‚Ä¢	–ò—Å–ø–æ–ª—å–∑—É–π mapping(address => bool) whitelist;
// 	‚Ä¢	–í constructor() —É—Å—Ç–∞–Ω–æ–≤–∏ owner = msg.sender;
// 	‚Ä¢	–î–æ–±–∞–≤—å addToWhitelist(address user) —Å –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º onlyOwner
// 	‚Ä¢	–í deposit() ‚Äî require(whitelist[msg.sender], "Not whitelisted");
